{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor for auth token if needed\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Handle unauthorized access\n    localStorage.removeItem('access_token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// User API functions\nexport const getUsers = async () => {\n  try {\n    const response = await api.get('/user');\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Failed to fetch users');\n  }\n};\nexport const getUserById = async id => {\n  try {\n    const response = await api.get(`/user/${id}`);\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || 'Failed to fetch user');\n  }\n};\nexport const getUsersByOrganization = async orgId => {\n  try {\n    const response = await api.get(`/user/organization/${orgId}`);\n    return response.data;\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.detail) || 'Failed to fetch organization users');\n  }\n};\nexport const createUser = async userData => {\n  try {\n    const endpoint = userData.user_role === 'admin' ? '/user/create/admin' : '/user/create/user';\n    const response = await api.post(endpoint, userData);\n    return response.data;\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n    throw new Error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.detail) || 'Failed to create user');\n  }\n};\nexport const createRegularUser = async userData => {\n  try {\n    const response = await api.post('/user/create/user', userData);\n    return response.data;\n  } catch (error) {\n    var _error$response6, _error$response6$data;\n    throw new Error(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.detail) || 'Failed to create user');\n  }\n};\nexport const createAdminUser = async userData => {\n  try {\n    const response = await api.post('/user/create/admin', userData);\n    return response.data;\n  } catch (error) {\n    var _error$response7, _error$response7$data;\n    throw new Error(((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.detail) || 'Failed to create admin user');\n  }\n};\nexport const deleteUser = async password => {\n  try {\n    const response = await api.post('/user/delete', {\n      user_password: password\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response8, _error$response8$data;\n    throw new Error(((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.detail) || 'Failed to delete user');\n  }\n};\n\n// Organization API functions (assuming you'll need these)\nexport const getOrganizations = async () => {\n  try {\n    const response = await api.get('/organizations');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching organizations:', error);\n    // Return empty array as fallback\n    return [];\n  }\n};\nexport const getOrganizationById = async id => {\n  try {\n    const response = await api.get(`/organizations/${id}`);\n    return response.data;\n  } catch (error) {\n    var _error$response9, _error$response9$data;\n    throw new Error(((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.detail) || 'Failed to fetch organization');\n  }\n};\n\n// Auth functions (for future use)\nexport const loginUser = async credentials => {\n  try {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  } catch (error) {\n    var _error$response0, _error$response0$data;\n    throw new Error(((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : (_error$response0$data = _error$response0.data) === null || _error$response0$data === void 0 ? void 0 : _error$response0$data.detail) || 'Login failed');\n  }\n};\nexport const logoutUser = () => {\n  localStorage.removeItem('access_token');\n  window.location.href = '/login';\n};\n\n// Utility function to check if user is authenticated\nexport const isAuthenticated = () => {\n  return !!localStorage.getItem('access_token');\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","getUsers","get","data","_error$response2","_error$response2$data","Error","detail","getUserById","id","_error$response3","_error$response3$data","getUsersByOrganization","orgId","_error$response4","_error$response4$data","createUser","userData","endpoint","user_role","post","_error$response5","_error$response5$data","createRegularUser","_error$response6","_error$response6$data","createAdminUser","_error$response7","_error$response7$data","deleteUser","password","user_password","_error$response8","_error$response8$data","getOrganizations","console","getOrganizationById","_error$response9","_error$response9$data","loginUser","credentials","_error$response0","_error$response0$data","logoutUser","isAuthenticated"],"sources":["/home/kaioh/task-manager-fastapi/frontend/src/api/user.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8000';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add request interceptor for auth token if needed\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      // Handle unauthorized access\n      localStorage.removeItem('access_token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// User API functions\nexport const getUsers = async () => {\n  try {\n    const response = await api.get('/user');\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.detail || 'Failed to fetch users');\n  }\n};\n\nexport const getUserById = async (id) => {\n  try {\n    const response = await api.get(`/user/${id}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.detail || 'Failed to fetch user');\n  }\n};\n\nexport const getUsersByOrganization = async (orgId) => {\n  try {\n    const response = await api.get(`/user/organization/${orgId}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.detail || 'Failed to fetch organization users');\n  }\n};\n\nexport const createUser = async (userData) => {\n  try {\n    const endpoint = userData.user_role === 'admin' \n      ? '/user/create/admin' \n      : '/user/create/user';\n    \n    const response = await api.post(endpoint, userData);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.detail || 'Failed to create user');\n  }\n};\n\nexport const createRegularUser = async (userData) => {\n  try {\n    const response = await api.post('/user/create/user', userData);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.detail || 'Failed to create user');\n  }\n};\n\nexport const createAdminUser = async (userData) => {\n  try {\n    const response = await api.post('/user/create/admin', userData);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.detail || 'Failed to create admin user');\n  }\n};\n\nexport const deleteUser = async (password) => {\n  try {\n    const response = await api.post('/user/delete', {\n      user_password: password\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.detail || 'Failed to delete user');\n  }\n};\n\n// Organization API functions (assuming you'll need these)\nexport const getOrganizations = async () => {\n  try {\n    const response = await api.get('/organizations');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching organizations:', error);\n    // Return empty array as fallback\n    return [];\n  }\n};\n\nexport const getOrganizationById = async (id) => {\n  try {\n    const response = await api.get(`/organizations/${id}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.detail || 'Failed to fetch organization');\n  }\n};\n\n// Auth functions (for future use)\nexport const loginUser = async (credentials) => {\n  try {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.detail || 'Login failed');\n  }\n};\n\nexport const logoutUser = () => {\n  localStorage.removeItem('access_token');\n  window.location.href = '/login';\n};\n\n// Utility function to check if user is authenticated\nexport const isAuthenticated = () => {\n  return !!localStorage.getItem('access_token');\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}